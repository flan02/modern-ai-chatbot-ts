/* eslint-disable @typescript-eslint/no-unused-vars */
import { ragChat } from "@/lib/rag-chat";
import { streamToString } from "@/lib/utils";
import { handlerChatbotResponse, handlerUserMessage, sendRagChatMessage } from "@/server-functions";
import { aiUseChatAdapter } from "@upstash/rag-chat/nextjs";
import { NextRequest, NextResponse } from "next/server";

type ChatStreamBody = {
  messages: { content: string }[],
  sessionId: string
}

export const POST = async (req: NextRequest, res: NextResponse) => {
  try {
    const { messages, sessionId } = await req.json() as ChatStreamBody

    const lastMessage = messages[messages.length - 1].content // I'm assuming the last message is the one that the user wants to send

    //const response = await ragChat.chat(lastMessage, { streaming: true, sessionId })
    //console.log("response", response)
    await handlerUserMessage(lastMessage, sessionId, "user")
    const response = await sendRagChatMessage(lastMessage, sessionId)

    const dataString = await streamToString(response.output)
    await handlerChatbotResponse(dataString, sessionId, "assistant")

    return aiUseChatAdapter(response) // The message is generated by the AI
  } catch (error) {
    console.error(error as unknown)
    return NextResponse.json({ error: error }, { status: 500 })
  }
}